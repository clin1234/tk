# RBC.tk.snap.A.test --
#
###Abstract
# This file contains the automatic tests that test the snap 
# function of the tk BLT component.
#
###Copyright
# See the file "license.terms" for information on usage and
# redistribution of this file, and for a DISCLAIMER OF ALL WARRANTIES.
#
###Revision String
# SVN: $Id$

###Package Definition
package provide tk.snap

package require rbc
namespace import rbc::*

package require tcltest
namespace import tcltest::*
namespace eval tk.snap {
	# ------------------------------------------------------------------------------------
	# Purpose: Ensure the snap command works properly when given a non-existent Tk photo.
	# ------------------------------------------------------------------------------------ 
	test RBC.tk.snap.A.1.1 {
	    tk snap: non-existent Tk photo
	} -setup {
	    graph .graph1
	    pack .graph1
	} -body {
	    if {[catch {tk snap .graph1 $img}]} {
			return 0
	    } else {
			return 1
	    }
	} -cleanup {
	    destroy .graph1
	} -result {0}
	
	# ------------------------------------------------------------------------------------
	# Purpose: Ensure the snap command works properly when given a non-existent window.
	# ------------------------------------------------------------------------------------ 
	test RBC.tk.snap.A.2.1 {
	    tk snap: non-existent window
	} -setup {
		set img [image create photo]
	} -body {
	    if {[catch {tk snap .graph1 $img}]} {
			return 0
	    } else {
			return 1
	    }
	} -cleanup {
	    image delete $img
	} -result {0}
	
	# ------------------------------------------------------------------------------------
	# Purpose: Ensure the snap command works properly.
	# ------------------------------------------------------------------------------------ 
	test RBC.tk.snap.A.3.1 {
	    tk snap: normal operation
	} -setup {
		graph .graph1
		pack .graph1
		set img [image create photo]
		update idletasks
	} -body {
	    if {[catch {tk snap .graph1 $img}]} {
			return 1
	    } else {
			return 0
	    }
	} -cleanup {
		image delete $img
		destroy .graph1
	} -result {0}
	
	cleanupTests
}
